{
  "$defs": {
    "AzureConfig": {
      "additionalProperties": false,
      "description": "This dictates the behavior of the Azure Pipelines CI service. It is a sub-mapping for\nAzure-specific configuration options. For more information and some variables\nspecifications, see the [Azure Pipelines schema reference documentation](\nhttps://learn.microsoft.com/en-us/azure/devops/pipelines/yaml-schema/?view=azure-pipelines).",
      "properties": {
        "force": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": false,
          "description": "Force building all supported providers",
          "title": "Force"
        },
        "free_disk_space": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": false,
          "description": "Free up disk space before running the Docker container for building on Linux",
          "title": "Free Disk Space"
        },
        "max_parallel": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": 50,
          "description": "Limit the amount of CI jobs running concurrently at a given time",
          "title": "Max Parallel"
        },
        "project_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": "84710dde-1620-425b-80d0-4cf5baca359d",
          "description": "The ID of the Azure Pipelines project",
          "title": "Project Id"
        },
        "project_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": "feedstock-builds",
          "description": "The name of the Azure Pipelines project",
          "title": "Project Name"
        },
        "settings_linux": {
          "allOf": [
            {
              "$ref": "#/$defs/AzureRunnerSettings"
            }
          ],
          "description": "Linux-specific settings for runners"
        },
        "settings_osx": {
          "allOf": [
            {
              "$ref": "#/$defs/AzureRunnerSettings"
            }
          ],
          "description": "OSX-specific settings for runners"
        },
        "settings_win": {
          "allOf": [
            {
              "$ref": "#/$defs/AzureRunnerSettings"
            }
          ],
          "description": "Windows-specific settings for runners"
        },
        "user_or_org": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the GitHub user or organization, if passed with the GithubConfig provider, must comply with the value of the user_or_org field",
          "title": "User Or Org"
        },
        "store_build_artifacts": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": false,
          "description": "Store the conda build_artifacts directory as an         Azure pipeline artifact",
          "title": "Store Build Artifacts"
        },
        "timeout_minutes": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The maximum amount of time (in minutes) that a             job can run before it is automatically canceled",
          "title": "Timeout Minutes"
        }
      },
      "title": "AzureConfig",
      "type": "object"
    },
    "AzureRunnerSettings": {
      "additionalProperties": true,
      "description": "This is the settings for runners.",
      "properties": {
        "pool": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "description": "The pool of self-hosted runners, e.g. 'vmImage': 'ubuntu-latest'",
          "title": "Pool"
        },
        "swapfile_size": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Swapfile size in GiB",
          "title": "Swapfile Size"
        },
        "timeoutInMinutes": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": 360,
          "description": "Timeout in minutes for the job",
          "title": "Timeoutinminutes"
        },
        "variables": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "description": "Variables",
          "title": "Variables"
        }
      },
      "title": "AzureRunnerSettings",
      "type": "object"
    },
    "BotConfig": {
      "additionalProperties": false,
      "description": "This dictates the behavior of the conda-forge auto-tick bot which issues\nautomatic version updates/migrations for feedstocks.",
      "properties": {
        "automerge": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/BotConfigAutoMergeChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": false,
          "description": "Automatically merge PRs if possible",
          "title": "Automerge"
        },
        "check_solvable": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": true,
          "description": "Open PRs only if resulting environment is solvable.",
          "title": "Check Solvable"
        },
        "inspection": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/BotConfigInspectionChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": "hint",
          "description": "Method for generating hints or updating recipe",
          "title": "Inspection"
        },
        "abi_migration_branches": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "List of branches for additional bot migration PRs",
          "title": "Abi Migration Branches"
        },
        "run_deps_from_wheel": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": false,
          "description": "Update run dependencies from the pip wheel",
          "title": "Run Deps From Wheel"
        }
      },
      "title": "BotConfig",
      "type": "object"
    },
    "BotConfigAutoMergeChoice": {
      "enum": [
        "version",
        "migration"
      ],
      "title": "BotConfigAutoMergeChoice",
      "type": "string"
    },
    "BotConfigInspectionChoice": {
      "enum": [
        "hint",
        "hint-all",
        "hint-source",
        "hint-grayskull",
        "update-all",
        "update-source",
        "update-grayskull"
      ],
      "title": "BotConfigInspectionChoice",
      "type": "string"
    },
    "BotConfigSkipRenderChoices": {
      "enum": [
        ".gitignore",
        ".gitattributes",
        "README.md",
        "LICENSE.txt",
        ".github/workflows"
      ],
      "title": "BotConfigSkipRenderChoices",
      "type": "string"
    },
    "CIservices": {
      "enum": [
        "azure",
        "circle",
        "travis",
        "appveyor",
        "github_actions",
        "drone",
        "woodpecker",
        "default",
        "emulated",
        "native",
        "None"
      ],
      "title": "CIservices",
      "type": "string"
    },
    "ChannelPriorityConfig": {
      "enum": [
        "strict",
        "flexible",
        "disabled"
      ],
      "title": "ChannelPriorityConfig",
      "type": "string"
    },
    "CondaBuildConfig": {
      "additionalProperties": false,
      "properties": {
        "pkg_format": {
          "anyOf": [
            {
              "enum": [
                "tar",
                1,
                2,
                "1",
                "2"
              ]
            },
            {
              "type": "null"
            }
          ],
          "default": 2,
          "description": "The package version format for conda build.",
          "title": "Pkg Format"
        },
        "zstd_compression_level": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": 16,
          "description": "The compression level for the zstd compression algorithm for\n            .conda artifacts. conda-forge uses a default value of 16 for a good\n            compromise of performance and compression.",
          "title": "Zstd Compression Level"
        },
        "error_overlinking": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": false,
          "description": "\n            Enable error when shared libraries from transitive dependencies are\n            directly  linked  to any executables or shared libraries in  built\n            packages. For more details, see the\n            [conda build documentation](https://docs.conda.io/projects/conda-build/en/stable/resources/commands/conda-build.html).\n            ",
          "title": "Error Overlinking"
        }
      },
      "title": "CondaBuildConfig",
      "type": "object"
    },
    "CondaForgeDocker": {
      "additionalProperties": false,
      "properties": {
        "executable": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": "docker",
          "description": "The executable for Docker",
          "title": "Executable"
        },
        "fallback_image": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": "quay.io/condaforge/linux-anvil-comp7",
          "description": "The fallback image for Docker",
          "title": "Fallback Image"
        },
        "command": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": "bash",
          "description": "The command to run in Docker",
          "title": "Command"
        },
        "interactive": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "deprecated": true,
          "description": "Whether to run Docker in interactive mode",
          "title": "Interactive"
        }
      },
      "title": "CondaForgeDocker",
      "type": "object"
    },
    "DefaultTestPlatforms": {
      "enum": [
        "all",
        "native",
        "native_and_emulated"
      ],
      "title": "DefaultTestPlatforms",
      "type": "string"
    },
    "GithubActionsConfig": {
      "additionalProperties": false,
      "properties": {
        "artifact_retention_days": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": 14,
          "description": "The number of days to retain artifacts",
          "title": "Artifact Retention Days"
        },
        "cancel_in_progress": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": true,
          "description": "Whether to cancel jobs in the same build if one fails.",
          "title": "Cancel In Progress"
        },
        "max_parallel": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The maximum number of jobs to run in parallel",
          "title": "Max Parallel"
        },
        "self_hosted": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": false,
          "description": "Whether to use self-hosted runners",
          "title": "Self Hosted"
        },
        "store_build_artifacts": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": false,
          "description": "Whether to store build artifacts",
          "title": "Store Build Artifacts"
        },
        "timeout_minutes": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": 360,
          "description": "The maximum amount of time (in minutes) that a             job can run before it is automatically canceled",
          "title": "Timeout Minutes"
        },
        "triggers": {
          "anyOf": [
            {
              "items": {},
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "Triggers for Github Actions. Defaults to push, pull_request,             when not self-hosted and push when self-hosted",
          "title": "Triggers"
        }
      },
      "title": "GithubActionsConfig",
      "type": "object"
    },
    "GithubConfig": {
      "additionalProperties": false,
      "properties": {
        "user_or_org": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": "conda-forge",
          "description": "The name of the GitHub user or organization,         if passed with the AzureConfig provider, must comply with the value of the user_or_org field",
          "title": "User Or Org"
        },
        "repo_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": "",
          "description": "The name of the repository",
          "title": "Repo Name"
        },
        "branch_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": "main",
          "description": "The name of the branch to execute on",
          "title": "Branch Name"
        },
        "tooling_branch_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": "main",
          "description": "The name of the branch to use for rerender+webservices             github actions and conda-forge-ci-setup-feedstock references",
          "title": "Tooling Branch Name"
        }
      },
      "title": "GithubConfig",
      "type": "object"
    },
    "Nullable": {
      "const": null,
      "description": "Created to avoid issue with schema validation of null values in lists or dicts.",
      "title": "Nullable"
    },
    "Platforms": {
      "enum": [
        "emscripten_wasm32",
        "wasi_wasm32",
        "freebsd_64",
        "linux_32",
        "linux_64",
        "linux_aarch64",
        "linux_armv6l",
        "linux_armv7l",
        "linux_ppc64",
        "linux_ppc64le",
        "linux_riscv64",
        "linux_s390x",
        "osx_64",
        "osx_arm64",
        "win_32",
        "win_64",
        "win_arm64",
        "zos_z"
      ],
      "title": "Platforms",
      "type": "string"
    },
    "ShellCheck": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "default": false,
          "description": "Whether to use shellcheck to lint shell scripts",
          "title": "Enabled",
          "type": "boolean"
        }
      },
      "title": "ShellCheck",
      "type": "object"
    },
    "build_platform": {
      "properties": {
        "emscripten_wasm32": {
          "anyOf": [
            {
              "$ref": "#/$defs/Platforms"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The emscripten_wasm32 value"
          }
        },
        "wasi_wasm32": {
          "anyOf": [
            {
              "$ref": "#/$defs/Platforms"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The wasi_wasm32 value"
          }
        },
        "freebsd_64": {
          "anyOf": [
            {
              "$ref": "#/$defs/Platforms"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The freebsd_64 value"
          }
        },
        "linux_32": {
          "anyOf": [
            {
              "$ref": "#/$defs/Platforms"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_32 value"
          }
        },
        "linux_64": {
          "anyOf": [
            {
              "$ref": "#/$defs/Platforms"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_64 value"
          }
        },
        "linux_aarch64": {
          "anyOf": [
            {
              "$ref": "#/$defs/Platforms"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_aarch64 value"
          }
        },
        "linux_armv6l": {
          "anyOf": [
            {
              "$ref": "#/$defs/Platforms"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_armv6l value"
          }
        },
        "linux_armv7l": {
          "anyOf": [
            {
              "$ref": "#/$defs/Platforms"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_armv7l value"
          }
        },
        "linux_ppc64": {
          "anyOf": [
            {
              "$ref": "#/$defs/Platforms"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_ppc64 value"
          }
        },
        "linux_ppc64le": {
          "anyOf": [
            {
              "$ref": "#/$defs/Platforms"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_ppc64le value"
          }
        },
        "linux_riscv64": {
          "anyOf": [
            {
              "$ref": "#/$defs/Platforms"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_riscv64 value"
          }
        },
        "linux_s390x": {
          "anyOf": [
            {
              "$ref": "#/$defs/Platforms"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_s390x value"
          }
        },
        "osx_64": {
          "anyOf": [
            {
              "$ref": "#/$defs/Platforms"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The osx_64 value"
          }
        },
        "osx_arm64": {
          "anyOf": [
            {
              "$ref": "#/$defs/Platforms"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The osx_arm64 value"
          }
        },
        "win_32": {
          "anyOf": [
            {
              "$ref": "#/$defs/Platforms"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The win_32 value"
          }
        },
        "win_64": {
          "anyOf": [
            {
              "$ref": "#/$defs/Platforms"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The win_64 value"
          }
        },
        "win_arm64": {
          "anyOf": [
            {
              "$ref": "#/$defs/Platforms"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The win_arm64 value"
          }
        },
        "zos_z": {
          "anyOf": [
            {
              "$ref": "#/$defs/Platforms"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The zos_z value"
          }
        }
      },
      "title": "build_platform",
      "type": "object"
    },
    "os_version": {
      "properties": {
        "emscripten_wasm32": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The emscripten_wasm32 value"
          },
          "title": "Emscripten Wasm32"
        },
        "wasi_wasm32": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The wasi_wasm32 value"
          },
          "title": "Wasi Wasm32"
        },
        "freebsd_64": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The freebsd_64 value"
          },
          "title": "Freebsd 64"
        },
        "linux_32": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_32 value"
          },
          "title": "Linux 32"
        },
        "linux_64": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_64 value"
          },
          "title": "Linux 64"
        },
        "linux_aarch64": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_aarch64 value"
          },
          "title": "Linux Aarch64"
        },
        "linux_armv6l": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_armv6l value"
          },
          "title": "Linux Armv6L"
        },
        "linux_armv7l": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_armv7l value"
          },
          "title": "Linux Armv7L"
        },
        "linux_ppc64": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_ppc64 value"
          },
          "title": "Linux Ppc64"
        },
        "linux_ppc64le": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_ppc64le value"
          },
          "title": "Linux Ppc64Le"
        },
        "linux_riscv64": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_riscv64 value"
          },
          "title": "Linux Riscv64"
        },
        "linux_s390x": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_s390x value"
          },
          "title": "Linux S390X"
        },
        "osx_64": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The osx_64 value"
          },
          "title": "Osx 64"
        },
        "osx_arm64": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The osx_arm64 value"
          },
          "title": "Osx Arm64"
        },
        "win_32": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The win_32 value"
          },
          "title": "Win 32"
        },
        "win_64": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The win_64 value"
          },
          "title": "Win 64"
        },
        "win_arm64": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The win_arm64 value"
          },
          "title": "Win Arm64"
        },
        "zos_z": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The zos_z value"
          },
          "title": "Zos Z"
        }
      },
      "title": "os_version",
      "type": "object"
    },
    "provider": {
      "properties": {
        "emscripten_wasm32": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CIservices"
              },
              "type": "array"
            },
            {
              "$ref": "#/$defs/CIservices"
            },
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The emscripten_wasm32 value"
          },
          "title": "Emscripten Wasm32"
        },
        "wasi_wasm32": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CIservices"
              },
              "type": "array"
            },
            {
              "$ref": "#/$defs/CIservices"
            },
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The wasi_wasm32 value"
          },
          "title": "Wasi Wasm32"
        },
        "freebsd_64": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CIservices"
              },
              "type": "array"
            },
            {
              "$ref": "#/$defs/CIservices"
            },
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The freebsd_64 value"
          },
          "title": "Freebsd 64"
        },
        "linux_32": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CIservices"
              },
              "type": "array"
            },
            {
              "$ref": "#/$defs/CIservices"
            },
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_32 value"
          },
          "title": "Linux 32"
        },
        "linux_64": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CIservices"
              },
              "type": "array"
            },
            {
              "$ref": "#/$defs/CIservices"
            },
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_64 value"
          },
          "title": "Linux 64"
        },
        "linux_aarch64": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CIservices"
              },
              "type": "array"
            },
            {
              "$ref": "#/$defs/CIservices"
            },
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_aarch64 value"
          },
          "title": "Linux Aarch64"
        },
        "linux_armv6l": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CIservices"
              },
              "type": "array"
            },
            {
              "$ref": "#/$defs/CIservices"
            },
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_armv6l value"
          },
          "title": "Linux Armv6L"
        },
        "linux_armv7l": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CIservices"
              },
              "type": "array"
            },
            {
              "$ref": "#/$defs/CIservices"
            },
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_armv7l value"
          },
          "title": "Linux Armv7L"
        },
        "linux_ppc64": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CIservices"
              },
              "type": "array"
            },
            {
              "$ref": "#/$defs/CIservices"
            },
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_ppc64 value"
          },
          "title": "Linux Ppc64"
        },
        "linux_ppc64le": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CIservices"
              },
              "type": "array"
            },
            {
              "$ref": "#/$defs/CIservices"
            },
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_ppc64le value"
          },
          "title": "Linux Ppc64Le"
        },
        "linux_riscv64": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CIservices"
              },
              "type": "array"
            },
            {
              "$ref": "#/$defs/CIservices"
            },
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_riscv64 value"
          },
          "title": "Linux Riscv64"
        },
        "linux_s390x": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CIservices"
              },
              "type": "array"
            },
            {
              "$ref": "#/$defs/CIservices"
            },
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux_s390x value"
          },
          "title": "Linux S390X"
        },
        "osx_64": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CIservices"
              },
              "type": "array"
            },
            {
              "$ref": "#/$defs/CIservices"
            },
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The osx_64 value"
          },
          "title": "Osx 64"
        },
        "osx_arm64": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CIservices"
              },
              "type": "array"
            },
            {
              "$ref": "#/$defs/CIservices"
            },
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The osx_arm64 value"
          },
          "title": "Osx Arm64"
        },
        "win_32": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CIservices"
              },
              "type": "array"
            },
            {
              "$ref": "#/$defs/CIservices"
            },
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The win_32 value"
          },
          "title": "Win 32"
        },
        "win_64": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CIservices"
              },
              "type": "array"
            },
            {
              "$ref": "#/$defs/CIservices"
            },
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The win_64 value"
          },
          "title": "Win 64"
        },
        "win_arm64": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CIservices"
              },
              "type": "array"
            },
            {
              "$ref": "#/$defs/CIservices"
            },
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The win_arm64 value"
          },
          "title": "Win Arm64"
        },
        "zos_z": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CIservices"
              },
              "type": "array"
            },
            {
              "$ref": "#/$defs/CIservices"
            },
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The zos_z value"
          },
          "title": "Zos Z"
        },
        "linux": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CIservices"
              },
              "type": "array"
            },
            {
              "$ref": "#/$defs/CIservices"
            },
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The linux value"
          },
          "title": "Linux"
        },
        "win": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CIservices"
              },
              "type": "array"
            },
            {
              "$ref": "#/$defs/CIservices"
            },
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The win value"
          },
          "title": "Win"
        },
        "osx": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CIservices"
              },
              "type": "array"
            },
            {
              "$ref": "#/$defs/CIservices"
            },
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/Nullable"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "description": "The osx value"
          },
          "title": "Osx"
        }
      },
      "title": "provider",
      "type": "object"
    }
  },
  "additionalProperties": false,
  "description": "This model describes in detail the top-level fields in  ``conda-forge.yml``.\nGeneral configuration options are described below within the ``Fields``\nspecifications. Additional examples are provided as part of the object\ndescription. Values and options are subject to change, and will be\nflagged as Deprecated as appropriate.",
  "properties": {
    "conda_build": {
      "anyOf": [
        {
          "$ref": "#/$defs/CondaBuildConfig"
        },
        {
          "type": "null"
        }
      ],
      "description": "\n        Settings in this block are used to control how ``conda build``\n        runs and produces artifacts. An example of the such configuration is:\n\n        .. code-block:: yaml\n\n            conda_build:\n                pkg_format: 2\n                zstd_compression_level: 16\n                error_overlinking: False\n\n        "
    },
    "conda_build_tool": {
      "anyOf": [
        {
          "enum": [
            "conda-build",
            "conda-build+classic",
            "conda-build+conda-libmamba-solver",
            "mambabuild"
          ],
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": "mambabuild",
      "description": "\n        Use this option to choose which tool is used to build your recipe.\n        ",
      "title": "Conda Build Tool"
    },
    "conda_install_tool": {
      "anyOf": [
        {
          "enum": [
            "conda",
            "mamba"
          ],
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": "mamba",
      "description": "\n        Use this option to choose which tool is used to provision the tooling in your\n        feedstock.\n        ",
      "title": "Conda Install Tool"
    },
    "conda_forge_output_validation": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "null"
        }
      ],
      "default": false,
      "description": "\n        This field must be set to ``True`` for feedstocks in the ``conda-forge`` GitHub\n        organization. It enables the required feedstock artifact validation as described\n        in :ref: Output Validation and Feedstock Tokens </maintainer/infrastructure#output-validation>.\n        ",
      "title": "Conda Forge Output Validation"
    },
    "conda_solver": {
      "anyOf": [
        {
          "enum": [
            "libmamba",
            "classic"
          ],
          "type": "string"
        },
        {
          "$ref": "#/$defs/Nullable"
        },
        {
          "type": "null"
        }
      ],
      "default": "libmamba",
      "description": "\n        Choose which ``conda`` solver plugin to use for feedstock builds.\n        ",
      "title": "Conda Solver"
    },
    "github": {
      "anyOf": [
        {
          "$ref": "#/$defs/GithubConfig"
        },
        {
          "type": "null"
        }
      ],
      "description": "\n        Mapping for GitHub-specific configuration options. The defaults are as follows:\n\n        .. code-block:: yaml\n\n            github:\n                user_or_org: conda-forge\n                repo_name: \"my_repo\"\n                branch_name: main\n                tooling_branch_name: main\n        "
    },
    "bot": {
      "anyOf": [
        {
          "$ref": "#/$defs/BotConfig"
        },
        {
          "type": "null"
        }
      ],
      "description": "\n        This dictates the behavior of the conda-forge auto-tick bot which issues\n        automatic version updates/migrations for feedstocks.\n        A valid example is:\n\n        .. code-block:: yaml\n\n            bot:\n                # can the bot automerge PRs it makes on this feedstock\n                automerge: true\n\n                # only open PRs if resulting environment is solvable, useful for tightly coupled packages\n                check_solvable: true\n\n                # The bot.inspection key in the conda-forge.yml can have one of six possible values:\n                inspection: hint-all  # generate hints using all methods\n\n                # any branches listed in this section will get bot migration PRs in addition\n                # to the default branch\n                abi_migration_branches:\n                    - v1.10.x\n\n                version_updates:\n                    # use this for packages that are updated too frequently\n                    random_fraction_to_keep: 0.1  # keeps 10% of versions at random\n\n        The ``abi_migration_branches`` feature is useful to, for example, add a\n        long-term support (LTS) branch for a package.\n        "
    },
    "build_platform": {
      "anyOf": [
        {
          "$ref": "#/$defs/build_platform"
        },
        {
          "type": "null"
        }
      ],
      "description": "\n        This is a mapping from the target platform to the build platform for the\n        package to be built. For example, the following builds a ``osx-64`` package\n        on the ``linux-64`` build platform using cross-compiling.\n\n        .. code-block:: yaml\n\n            build_platform:\n                osx_64: linux_64\n\n        Leaving this field empty implicitly requests to build a package natively. i.e.\n\n        .. code-block:: yaml\n\n            build_platform:\n                linux_64: linux_64\n                linux_ppc64le: linux_ppc64le\n                linux_aarch64: linux_aarch64\n                osx_64: osx_64\n                osx_arm64: osx_arm64\n                win_64: win_64\n        "
    },
    "channel_priority": {
      "anyOf": [
        {
          "$ref": "#/$defs/ChannelPriorityConfig"
        },
        {
          "type": "null"
        }
      ],
      "default": "strict",
      "description": "\n        The channel priority level for the conda solver during feedstock builds.\n        For extra information, see the\n        `Strict channel priority <https://conda.io/projects/conda/en/latest/user-guide/tasks/manage-channels.html#strict-channel-priority>`__\n        section on conda documentation.\n        "
    },
    "choco": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "description": "\n        This parameter allows for conda-smithy to run chocoloatey installs on Windows\n        when additional system packages are needed. This is a list of strings that\n        represent package names and any additional parameters. For example,\n\n        .. code-block:: yaml\n\n            choco:\n                # install a package\n                - nvidia-display-driver\n\n                # install a package with a specific version\n                - cuda --version=11.0.3\n\n        This is currently only implemented for Azure Pipelines. The command that is run is\n        ``choco install {entry} -fdv -y --debug``.  That is, ``choco install`` is executed\n        with a standard set of additional flags that are useful on CI.\n        ",
      "title": "Choco"
    },
    "docker": {
      "anyOf": [
        {
          "$ref": "#/$defs/CondaForgeDocker"
        },
        {
          "type": "null"
        }
      ],
      "description": "\n        This is a mapping for Docker-specific configuration options.\n        Some options are\n\n        .. code-block:: yaml\n\n            docker:\n                executable: docker\n                command: \"bash\"\n        "
    },
    "idle_timeout_minutes": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "$ref": "#/$defs/Nullable"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "\n        Configurable idle timeout. Used for packages that don't have chatty enough\n        builds. Applicable only to circleci and travis.\n\n        .. code-block:: yaml\n\n            idle_timeout_minutes: 60\n        ",
      "title": "Idle Timeout Minutes"
    },
    "noarch_platforms": {
      "anyOf": [
        {
          "items": {
            "$ref": "#/$defs/Platforms"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "description": "\n        Platforms on which to build noarch packages. The preferred default is a\n        single build on ``linux_64``.\n\n        .. code-block:: yaml\n\n            noarch_platforms: linux_64\n\n        To build on multiple platforms, e.g. for simple packages with platform-specific\n        dependencies, provide a list.\n\n        .. code-block:: yaml\n\n            noarch_platforms:\n            - linux_64\n            - win_64\n        ",
      "title": "Noarch Platforms"
    },
    "os_version": {
      "anyOf": [
        {
          "$ref": "#/$defs/os_version"
        },
        {
          "type": "null"
        }
      ],
      "description": "\n        This key is used to set the OS versions for `linux_*` platforms. Valid entries\n        map a linux platform and arch to either `cos6` or `cos7`.\n        Currently `cos6` is the default for `linux-64`.\n        All other linux architectures use CentOS 7.\n        Here is an example that enables CentOS 7 on ``linux-64`` builds\n\n        .. code-block:: yaml\n\n            os_version:\n                linux_64: cos7\n        "
    },
    "provider": {
      "anyOf": [
        {
          "$ref": "#/$defs/provider"
        },
        {
          "type": "null"
        }
      ],
      "description": "\n        The ``provider`` field is a mapping from build platform (not target platform)\n        to CI service. It determines which service handles each build platform.\n        If a desired build platform is not available with a selected provider\n        (either natively or with emulation), the build will be disabled.\n        Use the ``build_platform`` field to manually specify cross-compilation when\n        no providers offer a desired build platform.\n\n        The following are available as supported build platforms:\n\n        * ``linux_64``\n        * ``osx_64``\n        * ``win_64``\n        * ``linux_aarch64``\n        * ``linux_ppc64le``\n        * ``linux_s390x``\n        * ``linux_armv7l``\n\n        The following CI services are available:\n\n        * ``azure``\n        * ``circle``\n        * ``travis``\n        * ``appveyor``\n        * ``None`` or ``False`` to disable a build platform.\n        * ``default`` to choose an appropriate CI (only if available)\n\n        For example, switching linux_64 & osx_64 to build on Travis CI, with win_64 on\n        Appveyor:\n\n        .. code-block:: yaml\n\n            provider:\n                linux_64: travis\n                osx_64: travis\n                win_64: appveyor\n\n        Currently, x86_64 platforms are enabled, but other build platforms are\n        disabled by default. i.e. an empty provider entry is equivalent to the\n        following:\n\n        .. code-block:: yaml\n\n            provider:\n                linux_64: azure\n                osx_64: azure\n                win_64: azure\n                linux_ppc64le: None\n                linux_aarch64: None\n\n        To enable ``linux_ppc64le`` and ``linux_aarch64`` add the following:\n\n        .. code-block:: yaml\n\n            provider:\n                linux_ppc64le: default\n                linux_aarch64: default\n        "
    },
    "package": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/$defs/Nullable"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Default location for a package feedstock directory basename.",
      "title": "Package"
    },
    "recipe_dir": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": "recipe",
      "description": "\n        The relative path to the recipe directory. The default is:\n\n        .. code-block:: yaml\n\n            recipe_dir: recipe\n        ",
      "title": "Recipe Dir"
    },
    "remote_ci_setup": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "description": "\n        This option can be used to override the default ``conda-forge-ci-setup`` package.\n        Can be given with ``${url or channel_alias}::package_name``,\n        defaults to conda-forge channel_alias if no prefix is given.\n\n        .. code-block:: yaml\n\n            remote_ci_setup: \"conda-forge-ci-setup=4\"\n        ",
      "title": "Remote Ci Setup"
    },
    "shellcheck": {
      "anyOf": [
        {
          "$ref": "#/$defs/ShellCheck"
        },
        {
          "$ref": "#/$defs/Nullable"
        },
        {
          "type": "null"
        }
      ],
      "description": "\n        Shell scripts used for builds or activation scripts can be linted with\n        shellcheck. This option can be used to enable shellcheck and configure\n        its behavior. This is not enabled by default, but can be enabled like so:\n\n        .. code-block:: yaml\n\n            shellcheck:\n                enabled: True\n\n        ",
      "title": "Shellcheck"
    },
    "skip_render": {
      "anyOf": [
        {
          "items": {
            "$ref": "#/$defs/BotConfigSkipRenderChoices"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "description": "\n        This option specifies a list of files which ``conda smithy`` will skip rendering.\n        This is useful for files that are not templates, but are still in the recipe\n        directory. The default value is an empty list [ ], which will consider that\n        all files can be rendered. For example, if you want to skip rendering\n        the .gitignore and LICENSE.txt files, you can add the following:\n\n        .. code-block:: yaml\n\n            skip_render:\n                - .gitignore\n                - LICENSE.txt\n        ",
      "title": "Skip Render"
    },
    "templates": {
      "anyOf": [
        {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        {
          "type": "null"
        }
      ],
      "description": "\n        This is mostly an internal field for specifying where template files reside.\n        You shouldn't need to modify it.\n        ",
      "title": "Templates"
    },
    "test_on_native_only": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "null"
        }
      ],
      "default": false,
      "description": "\n        This was used for disabling testing for cross-compiling.\n\n        .. note::\n            This has been deprecated in favor of the top-level ``test`` field.\n            It is now mapped to ``test: native_and_emulated``.\n        ",
      "title": "Test On Native Only"
    },
    "test": {
      "anyOf": [
        {
          "$ref": "#/$defs/DefaultTestPlatforms"
        },
        {
          "$ref": "#/$defs/Nullable"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "\n        This is used to configure on which platforms a recipe is tested.\n\n        .. code-block:: yaml\n\n            test: native_and_emulated\n\n        Will do testing only if the platform is native or if there is an emulator.\n\n        .. code-block:: yaml\n\n            test: native\n\n        Will do testing only if the platform is native.\n        ",
      "title": "Test"
    },
    "upload_on_branch": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/$defs/Nullable"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "\n        This parameter restricts uploading access on work from certain branches of the\n        same repo. Only the branch listed in ``upload_on_branch`` will trigger uploading\n        of packages to the target channel. The default is to skip this check if the key\n        ``upload_on_branch`` is not in ``conda-forge.yml``. To restrict uploads to the\n        main branch:\n\n        .. code-block:: yaml\n\n            upload_on_branch: main\n        ",
      "title": "Upload On Branch"
    },
    "config_version": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": "2",
      "description": "\n        The conda-smithy config version to be used for conda_build_config.yaml\n        files in recipe and conda-forge-pinning. This should not be manually modified.\n        ",
      "title": "Config Version"
    },
    "exclusive_config_file": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/$defs/Nullable"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "\n        Exclusive conda-build config file to replace ``conda-forge-pinning``.\n        For advanced usage only.\n        ",
      "title": "Exclusive Config File"
    },
    "compiler_stack": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": "comp7",
      "deprecated": true,
      "description": "\n        Compiler stack environment variable. This is used to specify the compiler\n        stack to use for builds. Deprecated.\n\n        .. code-block:: yaml\n\n            compiler_stack: comp7\n        ",
      "title": "Compiler Stack"
    },
    "min_py_ver": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": "27",
      "deprecated": true,
      "description": "\n        Minimum Python version. This is used to specify the minimum Python version\n        to use for builds. Deprecated.\n\n        .. code-block:: yaml\n\n            min_py_ver: 27\n        ",
      "title": "Min Py Ver"
    },
    "max_py_ver": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": "37",
      "deprecated": true,
      "description": "\n        Maximum Python version. This is used to specify the maximum Python version\n        to use for builds. Deprecated.\n\n        .. code-block:: yaml\n\n            max_py_ver: 37\n        ",
      "title": "Max Py Ver"
    },
    "min_r_ver": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": "34",
      "deprecated": true,
      "description": "\n        Minimum R version. This is used to specify the minimum R version to\n        use for builds. Deprecated.\n\n        .. code-block:: yaml\n\n            min_r_ver: 34\n        ",
      "title": "Min R Ver"
    },
    "max_r_ver": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": "34",
      "description": "\n        Maximum R version. This is used to specify the maximum R version to use\n        for builds. Deprecated.\n\n        .. code-block:: yaml\n\n            max_r_ver: 34\n        ",
      "title": "Max R Ver"
    },
    "private_upload": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "null"
        }
      ],
      "default": false,
      "description": "\n        Whether to upload to a private channel.\n\n        .. code-block:: yaml\n\n            private_upload: False\n        ",
      "title": "Private Upload"
    },
    "secrets": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "description": "\n        List of secrets to be used in GitHub Actions.\n        The default is an empty list and will not be used.\n        ",
      "title": "Secrets"
    },
    "clone_depth": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "$ref": "#/$defs/Nullable"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "\n        The depth of the git clone.\n        ",
      "title": "Clone Depth"
    },
    "travis": {
      "anyOf": [
        {
          "type": "object"
        },
        {
          "type": "null"
        }
      ],
      "description": "\n        Travis CI settings. This is usually read-only and should not normally be\n        manually modified. Tools like conda-smithy may modify this, as needed.\n        ",
      "title": "Travis"
    },
    "circle": {
      "anyOf": [
        {
          "type": "object"
        },
        {
          "type": "null"
        }
      ],
      "description": "\n        Circle CI settings. This is usually read-only and should not normally be\n        manually modified. Tools like conda-smithy may modify this, as needed.\n        ",
      "title": "Circle"
    },
    "appveyor": {
      "anyOf": [
        {
          "type": "object"
        },
        {
          "type": "null"
        }
      ],
      "description": "\n        AppVeyor CI settings. This is usually read-only and should not normally be\n        manually modified. Tools like conda-smithy may modify this, as needed.\n        ",
      "title": "Appveyor"
    },
    "azure": {
      "anyOf": [
        {
          "$ref": "#/$defs/AzureConfig"
        },
        {
          "type": "null"
        }
      ],
      "description": "\n        Azure Pipelines CI settings. This is usually read-only and should not\n        normally be manually modified. Tools like conda-smithy may modify this, as needed.\n        For example:\n\n        .. code-block:: yaml\n\n            azure:\n                # flag for forcing the building all supported providers\n                force: False\n                # toggle for storing the conda build_artifacts directory (including the\n                # built packages) as an Azure pipeline artifact that can be downloaded\n                store_build_artifacts: False\n                # toggle for freeing up some extra space on the default Azure Pipelines\n                # linux image before running the Docker container for building\n                free_disk_space: False\n                # limit the amount of CI jobs running concurrently at a given time\n                # each OS will get its proportional share of the configured value\n                max_parallel: 25\n\n\n        .. _self-hosted_azure-config:\n\n        Below is an example configuration for setting up a self-hosted Azure agent for Linux:\n\n        .. code-block:: yaml\n\n            azure:\n                settings_linux:\n                pool:\n                    name: your_local_pool_name\n                    demands:\n                    - some_key -equals some_value\n                workspace:\n                    clean: all\n                strategy:\n                    maxParallel: 1\n\n        Below is an example configuration for adding a swapfile on an Azure agent for Linux:\n\n        .. code-block:: yaml\n\n            azure:\n                settings_linux:\n                    swapfile_size: 10GiB\n        "
    },
    "drone": {
      "anyOf": [
        {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        {
          "type": "null"
        }
      ],
      "description": "\n        Drone CI settings. This is usually read-only and should not normally be\n        manually modified. Tools like conda-smithy may modify this, as needed.\n        ",
      "title": "Drone"
    },
    "github_actions": {
      "anyOf": [
        {
          "$ref": "#/$defs/GithubActionsConfig"
        },
        {
          "type": "null"
        }
      ],
      "description": "\n        GitHub Actions CI settings. This is usually read-only and should not normally be\n        manually modified. Tools like conda-smithy may modify this, as needed.\n        "
    },
    "woodpecker": {
      "anyOf": [
        {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        {
          "type": "null"
        }
      ],
      "description": "\n        Woodpecker CI settings. This is usually read-only and should not normally be\n        manually modified. Tools like conda-smithy may modify this, as needed.\n        ",
      "title": "Woodpecker"
    },
    "build_with_mambabuild": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "null"
        }
      ],
      "default": true,
      "deprecated": true,
      "description": "\n        build_with_mambabuild is deprecated, use conda_build_tool instead. Configures the conda-forge CI to run a debug build using the ``mamba`` solver.\n        More information can be found in the\n        `mamba docs <https://conda-forge.org/docs/maintainer/maintainer_faq.html#mfaq-mamba-local>`__.\n\n        .. code-block:: yaml\n\n            build_with_mambabuild:\n            True\n        ",
      "title": "Build With Mambabuild"
    },
    "matrix": {
      "anyOf": [
        {
          "type": "object"
        },
        {
          "type": "null"
        }
      ],
      "description": "\n        Build matrices were used to specify a set of build configurations to run for each\n        package pinned dependency. This has been deprecated in favor of the provider field.\n        More information can be found in the\n        :ref:`Build Matrices </maintainer/knowledge_base#build-matrices>` section of the\n        conda-forge docs.\n        ",
      "title": "Matrix"
    }
  },
  "title": "ConfigModel",
  "type": "object"
}
